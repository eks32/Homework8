[
  {
    "objectID": "Homework8.html",
    "href": "Homework8.html",
    "title": "Homework 8",
    "section": "",
    "text": "I used this same exact dataset for my project so copying some code from there.\n\nbike_data &lt;- read.csv(\"SeoulBikeData.csv\", fileEncoding = \"ISO-8859-1\", check.names = FALSE)\n#Removing special characters and spaces for easier variables\nnames(bike_data) &lt;- gsub(\"\\\\s|\\\\(.*\\\\)\", \"\", names(bike_data))\nnames(bike_data)\n\n [1] \"Date\"                \"RentedBikeCount\"     \"Hour\"               \n [4] \"Temperature\"         \"Humidity\"            \"Windspeed\"          \n [7] \"Visibility\"          \"Dewpointtemperature\" \"SolarRadiation\"     \n[10] \"Rainfall\"            \"Snowfall\"            \"Seasons\"            \n[13] \"Holiday\"             \"FunctioningDay\""
  },
  {
    "objectID": "Homework8.html#reading-data",
    "href": "Homework8.html#reading-data",
    "title": "Homework 8",
    "section": "",
    "text": "I used this same exact dataset for my project so copying some code from there.\n\nbike_data &lt;- read.csv(\"SeoulBikeData.csv\", fileEncoding = \"ISO-8859-1\", check.names = FALSE)\n#Removing special characters and spaces for easier variables\nnames(bike_data) &lt;- gsub(\"\\\\s|\\\\(.*\\\\)\", \"\", names(bike_data))\nnames(bike_data)\n\n [1] \"Date\"                \"RentedBikeCount\"     \"Hour\"               \n [4] \"Temperature\"         \"Humidity\"            \"Windspeed\"          \n [7] \"Visibility\"          \"Dewpointtemperature\" \"SolarRadiation\"     \n[10] \"Rainfall\"            \"Snowfall\"            \"Seasons\"            \n[13] \"Holiday\"             \"FunctioningDay\""
  },
  {
    "objectID": "Homework8.html#checking-for-missing-values",
    "href": "Homework8.html#checking-for-missing-values",
    "title": "Homework 8",
    "section": "Checking for missing values",
    "text": "Checking for missing values\n\nbike_data |&gt;\n  summarize(across(everything(),~sum(is.na(TRUE))))\n\n  Date RentedBikeCount Hour Temperature Humidity Windspeed Visibility\n1    0               0    0           0        0         0          0\n  Dewpointtemperature SolarRadiation Rainfall Snowfall Seasons Holiday\n1                   0              0        0        0       0       0\n  FunctioningDay\n1              0\n\n\nNone found."
  },
  {
    "objectID": "Homework8.html#checking-columns",
    "href": "Homework8.html#checking-columns",
    "title": "Homework 8",
    "section": "Checking columns",
    "text": "Checking columns\n\nstr(bike_data)\n\n'data.frame':   8760 obs. of  14 variables:\n $ Date               : chr  \"01/12/2017\" \"01/12/2017\" \"01/12/2017\" \"01/12/2017\" ...\n $ RentedBikeCount    : int  254 204 173 107 78 100 181 460 930 490 ...\n $ Hour               : int  0 1 2 3 4 5 6 7 8 9 ...\n $ Temperature        : num  -5.2 -5.5 -6 -6.2 -6 -6.4 -6.6 -7.4 -7.6 -6.5 ...\n $ Humidity           : int  37 38 39 40 36 37 35 38 37 27 ...\n $ Windspeed          : num  2.2 0.8 1 0.9 2.3 1.5 1.3 0.9 1.1 0.5 ...\n $ Visibility         : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 1928 ...\n $ Dewpointtemperature: num  -17.6 -17.6 -17.7 -17.6 -18.6 -18.7 -19.5 -19.3 -19.8 -22.4 ...\n $ SolarRadiation     : num  0 0 0 0 0 0 0 0 0.01 0.23 ...\n $ Rainfall           : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Snowfall           : num  0 0 0 0 0 0 0 0 0 0 ...\n $ Seasons            : chr  \"Winter\" \"Winter\" \"Winter\" \"Winter\" ...\n $ Holiday            : chr  \"No Holiday\" \"No Holiday\" \"No Holiday\" \"No Holiday\" ...\n $ FunctioningDay     : chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n\n\nLooks like Seasons,Holiday, and Functioning day are categorical. Checking our numerical and factor levels.\n\nunique(bike_data$Seasons)\n\n[1] \"Winter\" \"Spring\" \"Summer\" \"Autumn\"\n\nunique(bike_data$Holiday)\n\n[1] \"No Holiday\" \"Holiday\"   \n\nunique(bike_data$FunctioningDay)\n\n[1] \"Yes\" \"No\" \n\nbike_data |&gt;\n  select(where(is.numeric)) |&gt;\n  summarize(\n    across(\n      where(is.numeric),\n      list(\n        mean = ~mean(.x),\n        sd = ~sd(.x),\n        min = ~min(.x),\n        max = ~max(.x),\n        median = ~median(.x)\n      )\n    )\n  )\n\n  RentedBikeCount_mean RentedBikeCount_sd RentedBikeCount_min\n1             704.6021           644.9975                   0\n  RentedBikeCount_max RentedBikeCount_median Hour_mean  Hour_sd Hour_min\n1                3556                  504.5      11.5 6.922582        0\n  Hour_max Hour_median Temperature_mean Temperature_sd Temperature_min\n1       23        11.5         12.88292       11.94483           -17.8\n  Temperature_max Temperature_median Humidity_mean Humidity_sd Humidity_min\n1            39.4               13.7      58.22626    20.36241            0\n  Humidity_max Humidity_median Windspeed_mean Windspeed_sd Windspeed_min\n1           98              57       1.724909       1.0363             0\n  Windspeed_max Windspeed_median Visibility_mean Visibility_sd Visibility_min\n1           7.4              1.5        1436.826      608.2987             27\n  Visibility_max Visibility_median Dewpointtemperature_mean\n1           2000              1698                 4.073813\n  Dewpointtemperature_sd Dewpointtemperature_min Dewpointtemperature_max\n1               13.06037                   -30.6                    27.2\n  Dewpointtemperature_median SolarRadiation_mean SolarRadiation_sd\n1                        5.1           0.5691107         0.8687462\n  SolarRadiation_min SolarRadiation_max SolarRadiation_median Rainfall_mean\n1                  0               3.52                  0.01     0.1486872\n  Rainfall_sd Rainfall_min Rainfall_max Rainfall_median Snowfall_mean\n1    1.128193            0           35               0    0.07506849\n  Snowfall_sd Snowfall_min Snowfall_max Snowfall_median\n1   0.4367462            0          8.8               0\n\n\nNow we have factor levels and looks like nothing out of the ordinary"
  },
  {
    "objectID": "Homework8.html#converting-datefactors",
    "href": "Homework8.html#converting-datefactors",
    "title": "Homework 8",
    "section": "Converting Date/Factors",
    "text": "Converting Date/Factors\n\n#Date\nbike_data &lt;- bike_data |&gt;\n  mutate(Date = as.Date(Date))\n\n#Factors\nbike_data &lt;- bike_data |&gt;\n  mutate(across(c(Seasons, Holiday, FunctioningDay), as.factor))\n\nWe showed our summary statistics on our numerical values earlier. But showing with our subsetted functional data. Showing our categorical counts. Some values are different since we subsetted functioning days.\n\n# Subset where functioning day is true\nbike_data_functional &lt;- bike_data |&gt;\n  filter(FunctioningDay == \"Yes\")\n\n#num functional data\nbike_summary &lt;- bike_data_functional |&gt;\n  summarize(across(where(is.numeric),\n                   list(\n                      count = ~sum(!is.na(.x)),\n                      mean = ~mean(.x),\n                      sd = ~sd(.x),\n                      min = ~min(.x),\n                      max = ~max(.x),\n                      median = ~median(.x)\n  )))\nprint(bike_summary)\n\n  RentedBikeCount_count RentedBikeCount_mean RentedBikeCount_sd\n1                  8465              729.157           642.3512\n  RentedBikeCount_min RentedBikeCount_max RentedBikeCount_median Hour_count\n1                   2                3556                    542       8465\n  Hour_mean  Hour_sd Hour_min Hour_max Hour_median Temperature_count\n1  11.50703 6.920899        0       23          12              8465\n  Temperature_mean Temperature_sd Temperature_min Temperature_max\n1         12.77106       12.10437           -17.8            39.4\n  Temperature_median Humidity_count Humidity_mean Humidity_sd Humidity_min\n1               13.5           8465      58.14719    20.48484            0\n  Humidity_max Humidity_median Windspeed_count Windspeed_mean Windspeed_sd\n1           98              57            8465       1.725883     1.034281\n  Windspeed_min Windspeed_max Windspeed_median Visibility_count Visibility_mean\n1             0           7.4              1.5             8465        1433.873\n  Visibility_sd Visibility_min Visibility_max Visibility_median\n1      609.0512             27           2000              1690\n  Dewpointtemperature_count Dewpointtemperature_mean Dewpointtemperature_sd\n1                      8465                 3.944997                13.2424\n  Dewpointtemperature_min Dewpointtemperature_max Dewpointtemperature_median\n1                   -30.6                    27.2                        4.7\n  SolarRadiation_count SolarRadiation_mean SolarRadiation_sd SolarRadiation_min\n1                 8465           0.5678677         0.8682452                  0\n  SolarRadiation_max SolarRadiation_median Rainfall_count Rainfall_mean\n1               3.52                  0.01           8465     0.1491199\n  Rainfall_sd Rainfall_min Rainfall_max Rainfall_median Snowfall_count\n1     1.12554            0           35               0           8465\n  Snowfall_mean Snowfall_sd Snowfall_min Snowfall_max Snowfall_median\n1    0.07768458   0.4440633            0          8.8               0\n\n#cat data\nbike_cat_summary &lt;- bike_data_functional |&gt;\n  select(where(is.factor)) |&gt;\n  pivot_longer(cols = everything(), names_to = \"variable\", values_to =\"level\") |&gt;\n  group_by(variable, level) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'variable'. You can override using the\n`.groups` argument.\n\nprint(bike_cat_summary)\n\n# A tibble: 7 Ã— 3\n# Groups:   variable [3]\n  variable       level      count\n  &lt;chr&gt;          &lt;fct&gt;      &lt;int&gt;\n1 FunctioningDay Yes         8465\n2 Holiday        Holiday      408\n3 Holiday        No Holiday  8057\n4 Seasons        Autumn      1937\n5 Seasons        Spring      2160\n6 Seasons        Summer      2208\n7 Seasons        Winter      2160\n\n\nSummarizing by groups of dates/seasons/holiday. Showing sum of bike count, rainfall, and snowfall. Also the mean of temperature, humidity, visibility, dew point, and uv radiation.\n\nbike_data_daily &lt;- bike_data_functional |&gt;\n  group_by(Date, Seasons, Holiday) |&gt;\n  summarize(\n    # Sum of bike count, rainfall, and snowfall\n    daily_bike_count = sum(RentedBikeCount),\n    total_rainfall = sum(Rainfall),\n    total_snowfall = sum(Snowfall),\n    \n    # Avg of  weather variables\n    avg_temperature = mean(Temperature),\n    avg_humidity = mean(Humidity),\n    avg_windspeed = mean(Windspeed),\n    avg_visibility = mean(Visibility),\n    avg_dewpointtemperature = mean(Dewpointtemperature),\n    avg_solarradiation = mean(SolarRadiation),\n    .groups = 'drop' \n  )\n\nprint(bike_data_daily)\n\n# A tibble: 353 Ã— 12\n   Date       Seasons Holiday    daily_bike_count total_rainfall total_snowfall\n   &lt;date&gt;     &lt;fct&gt;   &lt;fct&gt;                 &lt;int&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n 1 0001-01-20 Winter  Holiday                4290            0              0  \n 2 0001-02-20 Winter  No Holiday             5377            0             21.7\n 3 0001-03-20 Spring  Holiday                5132            2.5            0  \n 4 0001-04-20 Spring  No Holiday            17388            0              0  \n 5 0001-05-20 Spring  Holiday               26820            0              0  \n 6 0001-06-20 Summer  No Holiday            31928            0              0  \n 7 0001-07-20 Summer  No Holiday             3231           81              0  \n 8 0001-08-20 Summer  No Holiday            20712            0              0  \n 9 0001-09-20 Autumn  No Holiday            26010            0              0  \n10 0001-10-20 Autumn  No Holiday            27909            0              0  \n# â„¹ 343 more rows\n# â„¹ 6 more variables: avg_temperature &lt;dbl&gt;, avg_humidity &lt;dbl&gt;,\n#   avg_windspeed &lt;dbl&gt;, avg_visibility &lt;dbl&gt;, avg_dewpointtemperature &lt;dbl&gt;,\n#   avg_solarradiation &lt;dbl&gt;\n\n\nSome summary stats on our new daily data, plots, and correlations.\n\nbike_daily_summary &lt;- bike_data_daily |&gt;\n  summarize(\n    across(\n      where(is.numeric),\n      list(\n        count = ~sum(!is.na(.x)),\n        mean = ~mean(.x),\n        sd = ~sd(.x),\n        min = ~min(.x),\n        max = ~max(.x),\n        median = ~median(.x)\n      )\n    )\n  )\n\n# View the summary\nprint(bike_daily_summary)\n\n# A tibble: 1 Ã— 54\n  daily_bike_count_count daily_bike_count_mean daily_bike_count_sd\n                   &lt;int&gt;                 &lt;dbl&gt;               &lt;dbl&gt;\n1                    353                17485.               9937.\n# â„¹ 51 more variables: daily_bike_count_min &lt;int&gt;, daily_bike_count_max &lt;int&gt;,\n#   daily_bike_count_median &lt;int&gt;, total_rainfall_count &lt;int&gt;,\n#   total_rainfall_mean &lt;dbl&gt;, total_rainfall_sd &lt;dbl&gt;,\n#   total_rainfall_min &lt;dbl&gt;, total_rainfall_max &lt;dbl&gt;,\n#   total_rainfall_median &lt;dbl&gt;, total_snowfall_count &lt;int&gt;,\n#   total_snowfall_mean &lt;dbl&gt;, total_snowfall_sd &lt;dbl&gt;,\n#   total_snowfall_min &lt;dbl&gt;, total_snowfall_max &lt;dbl&gt;, â€¦\n\n\n\n#Plot  of average temperature and daily bike count with smoothing\nggplot(bike_data_daily, aes(x = avg_temperature, y = daily_bike_count)) +\n  geom_point() +\n  geom_smooth()\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n  labs(title = \"Daily Bike Count vs. Average Temperature\", x = \"Average Temperature (Â°C)\", y = \"Daily Bike Count\")\n\n$x\n[1] \"Average Temperature (Â°C)\"\n\n$y\n[1] \"Daily Bike Count\"\n\n$title\n[1] \"Daily Bike Count vs. Average Temperature\"\n\nattr(,\"class\")\n[1] \"labels\"\n\nbike_data_daily &lt;- bike_data_daily |&gt;\n  arrange(Date)\n#plot between bike count and time\n  ggplot(bike_data_daily, aes(x = Date, y = daily_bike_count)) +\n  geom_point()\n\n\n\n\n\n\n\n  labs(title = \"Daily Bike Count vs. Average Temperature\", x = \"Average Temperature (Â°C)\", y = \"Daily Bike Count\")\n\n$x\n[1] \"Average Temperature (Â°C)\"\n\n$y\n[1] \"Daily Bike Count\"\n\n$title\n[1] \"Daily Bike Count vs. Average Temperature\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\nInteresting results with the comparison over time. Makes sense that people would bike more in warmer weather.\nCorrelation between our numerical variables and rented bikes.\n\nbike_data_daily |&gt;\n  summarize(\n    across(\n      where(is.numeric) & !c(daily_bike_count),\n      ~ cor(.x, bike_data_daily$daily_bike_count)\n    )\n  )\n\n# A tibble: 1 Ã— 8\n  total_rainfall total_snowfall avg_temperature avg_humidity avg_windspeed\n           &lt;dbl&gt;          &lt;dbl&gt;           &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;\n1         -0.239         -0.265           0.753       0.0359        -0.193\n# â„¹ 3 more variables: avg_visibility &lt;dbl&gt;, avg_dewpointtemperature &lt;dbl&gt;,\n#   avg_solarradiation &lt;dbl&gt;\n\n\nInteresting that rain or snow is a weak negative correlation. Would have expected stronger."
  },
  {
    "objectID": "Homework8.html#fold-stuff",
    "href": "Homework8.html#fold-stuff",
    "title": "Homework 8",
    "section": "Fold stuff",
    "text": "Fold stuff\n\nbike_split &lt;- initial_split(bike_data_daily, prop = 0.75, strata = Seasons)\nbike_train &lt;- training(bike_split)\nbike_test &lt;- testing(bike_split)\n#10-fold\nbike_10_folds &lt;- vfold_cv(bike_train,10)"
  },
  {
    "objectID": "Homework8.html#st-recipe",
    "href": "Homework8.html#st-recipe",
    "title": "Homework 8",
    "section": "1st Recipe",
    "text": "1st Recipe\n\nrecipe_1 &lt;- recipe(daily_bike_count ~ ., data = bike_train) |&gt;\n  #changing date to different id\n  update_role(Date, new_role = \"ID\") |&gt;\n  \n  step_date(Date, features = \"dow\") |&gt;\n  step_mutate(\n    day_type = factor(if_else(Date_dow %in% 2:6, \"Weekday\", \"Weekend\"))\n  ) |&gt;\n  step_rm(Date_dow) |&gt;\n  \n  # standardizing numeric variables\n  step_normalize(all_numeric_predictors()) |&gt;\n  # dummy variables for factors\n  step_dummy(all_nominal_predictors()) \nrecipe_1\n\n\n\n\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\n\n\n\n\nâ”€â”€ Inputs \n\n\nNumber of variables by role\n\n\noutcome:    1\npredictor: 10\nID:         1\n\n\n\n\n\nâ”€â”€ Operations \n\n\nâ€¢ Date features from: Date\n\n\nâ€¢ Variable mutation for: factor(if_else(Date_dow %in% 2:6, \"Weekday\",\n  \"Weekend\"))\n\n\nâ€¢ Variables removed: Date_dow\n\n\nâ€¢ Centering and scaling for: all_numeric_predictors()\n\n\nâ€¢ Dummy variables from: all_nominal_predictors()"
  },
  {
    "objectID": "Homework8.html#nd-recipe",
    "href": "Homework8.html#nd-recipe",
    "title": "Homework 8",
    "section": "2nd Recipe",
    "text": "2nd Recipe\n\nrecipe_2 &lt;- recipe(daily_bike_count ~ ., data = bike_train) |&gt;\n  #changing date to different id\n  update_role(Date, new_role = \"ID\") |&gt;\n  \n  step_date(Date, features = \"dow\") |&gt;\n  step_mutate(\n    day_type = factor(if_else(Date_dow %in% 2:6, \"Weekday\", \"Weekend\"))\n  ) |&gt;\n  step_rm(Date_dow) |&gt;\n  \n  # standardizing numeric variables\n  step_normalize(all_numeric_predictors()) |&gt;\n  # dummy variables for factors\n  step_dummy(all_nominal_predictors()) |&gt;\n  #interactions\n  step_interact(terms = ~ starts_with(\"Seasons\"):Holiday) |&gt; \n  step_interact(terms = ~ starts_with(\"Seasons\"):Temperature) |&gt;   \n  step_interact(terms = ~ Temperature:Rainfall) \nrecipe_2\n\n\n\n\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\n\n\n\n\nâ”€â”€ Inputs \n\n\nNumber of variables by role\n\n\noutcome:    1\npredictor: 10\nID:         1\n\n\n\n\n\nâ”€â”€ Operations \n\n\nâ€¢ Date features from: Date\n\n\nâ€¢ Variable mutation for: factor(if_else(Date_dow %in% 2:6, \"Weekday\",\n  \"Weekend\"))\n\n\nâ€¢ Variables removed: Date_dow\n\n\nâ€¢ Centering and scaling for: all_numeric_predictors()\n\n\nâ€¢ Dummy variables from: all_nominal_predictors()\n\n\nâ€¢ Interactions with: starts_with(\"Seasons\"):Holiday\n\n\nâ€¢ Interactions with: starts_with(\"Seasons\"):Temperature\n\n\nâ€¢ Interactions with: Temperature:Rainfall"
  },
  {
    "objectID": "Homework8.html#rd-recipe",
    "href": "Homework8.html#rd-recipe",
    "title": "Homework 8",
    "section": "3rd Recipe",
    "text": "3rd Recipe\n\nrecipe_3 &lt;- recipe(daily_bike_count ~ ., data = bike_train) |&gt;\n  #changing date to different id\n  update_role(Date, new_role = \"ID\") |&gt;\n  \n  step_date(Date, features = \"dow\") |&gt;\n  step_mutate(\n    day_type = factor(if_else(Date_dow %in% 2:6, \"Weekday\", \"Weekend\"),levels =c(\"Weekday\",\"Weekend\"))) |&gt;\n  step_rm(Date_dow) |&gt;\n  \n  # standardizing numeric variables\n  step_normalize(all_numeric_predictors()) |&gt;\n  # dummy variables for factors\n  step_dummy(all_nominal_predictors()) |&gt;\n  #interactions\n  step_interact(terms = ~ starts_with(\"Seasons\"):Holiday) |&gt; \n  step_interact(terms = ~ starts_with(\"Seasons\"):Temperature) |&gt;   \n  step_interact(terms = ~ Temperature:Rainfall) |&gt;\n  \n  #quadratic term for numerics\n  step_poly(all_numeric_predictors(), degree = 2, options = list(raw = TRUE))\nrecipe_3\n\n\n\n\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n\n\n\n\n\nâ”€â”€ Inputs \n\n\nNumber of variables by role\n\n\noutcome:    1\npredictor: 10\nID:         1\n\n\n\n\n\nâ”€â”€ Operations \n\n\nâ€¢ Date features from: Date\n\n\nâ€¢ Variable mutation for: factor(if_else(Date_dow %in% 2:6, \"Weekday\",\n  \"Weekend\"), levels = c(\"Weekday\", \"Weekend\"))\n\n\nâ€¢ Variables removed: Date_dow\n\n\nâ€¢ Centering and scaling for: all_numeric_predictors()\n\n\nâ€¢ Dummy variables from: all_nominal_predictors()\n\n\nâ€¢ Interactions with: starts_with(\"Seasons\"):Holiday\n\n\nâ€¢ Interactions with: starts_with(\"Seasons\"):Temperature\n\n\nâ€¢ Interactions with: Temperature:Rainfall\n\n\nâ€¢ Orthogonal polynomials on: all_numeric_predictors()\n\n\n\nbike_mod &lt;- linear_reg() |&gt;\n  set_engine(\"lm\")\nbike_wfl &lt;- workflow() |&gt;\n  add_recipe(recipe_3) |&gt;\n  add_model(bike_mod)\n#Commented out code so it renders the html\n#bike_CV_fits &lt;- bike_wfl |&gt;\n#  fit_resamples(bike_10_folds)\n#ike_CV_fits|&gt;\n#  collect_metrics()\n\nWriting this for completeness. Had an issue troubleshooting with the date variable and could not figure it out in time. Used prep() bake() and narrowed down to some issue with the interaction terms made and I canâ€™t figure it out."
  }
]